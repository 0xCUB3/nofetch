#!/bin/sh
# v0.0.2 -- Copyright 2020 OxCUBE, 2025 Coarse Rosinflower. All Rights Reserved.
# NOTICE: All redistributions of the following code must explicitly state what
# was modified by the end user, and the names '0xCUBE' and 'Coarse Rosinflower'
# must be mentioned in the credits of the public repository.

# Variables used in the script
ctype=
color=

is_color_set=
# Sets the color to be used in the output via a command-line argument
set_color () {
	if [ -n "${is_color_set}" ]; then
		echo "Only one color may be specified."
		exit 1
	fi
	is_color_set=true

	case "$1" in
		'black') color="$(printf '\033[30m')";;
		'red') color="$(printf '\033[31m')";;
		'yellow') color="$(printf '\033[32m')";;
		'green') color="$(printf '\033[33m')";;
		'cyan') color="$(printf '\033[34m')";;
		'blue') color="$(printf '\033[35m')";;
		'magenta') color="$(printf '\033[36m')";;
		'white') color="$(printf '\033[37m')";;
		'brightblack') color="$(printf '\033[90m')";;
		'brightred') color="$(printf '\033[91m')";;
		'brightyellow') color="$(printf '\033[92m')";;
		'brightgreen') color="$(printf '\033[93m')";;
		'brightcyan') color="$(printf '\033[94m')";;
		'brightblue') color="$(printf '\033[95m')";;
		'brightmagenta') color="$(printf '\033[96m')";;
		'brightwhite') color="$(printf '\033[97m')";;
		*)	echo 'Invalid color. Must be one of:
[bright]<black | red | green | yellow | blue | magenta | cyan | white>.'
			exit 1
	esac
}

# Sets what text will be outputted via a command-line argument
is_type_set=
set_type () {
	if [ -n "${is_type_set}" ]; then
		echo "Only one option may be specified."
		exit 1
	fi
	is_type_set=true
	case "$1" in
		'--regular');;
		'--lttstore' | '--lttstore.com') ctype='lttstore';;
		'--flex') ctype='flex';;
		'--help') ctype='help';;
		*)	echo 'Invalid option. Must be one of --<regular | lttstore | flex | help>.'
			exit 1
	esac
}

# Iterate through all command line arguments and see if any of them are valid
for i; do
	# POSIX sh doesn't have a '=~' operator so did this instead
	if [ "$(echo "$i" | cut -c1-2)" = "--" ]; then
		set_type "$i"
	else
		set_color "$i"
	fi
done

# LTTstore.com nofetch output
if [ "$ctype" = "lttstore" ]; then
	echo "${color}
 _        _________   _________    ________   _________    _______    _______    _______        ________    _______    _____________
| |      |___   ___| |___   ___|  /  ______| |___   ___|  / _____ \  |  ____ \  |  _____|      / _______|  / _____ \  |  ___   ___  |
| |          | |         | |     |  |____        | |     | |     | | | |____| | | |___        | |         | |     | | | |   | |   | |
| |          | |         | |      \______ \      | |     | |     | | | ___  _/  |  ___|       | |         | |     | | | |   | |   | |
| |          | |         | |             | |     | |     | |     | | | |  \ \   | |           | |         | |     | | | |   | |   | |
| |______    | |         | |      _______| |     | |     | |_____| | | |   \ \  | |_____   _  | |_______  | |_____| | | |   | |   | |
|________|   |_|         |_|     |________/      |_|      \_______/  |_|    \_\ |_______| |_|  \________|  \_______/  |_|   |_|   |_|
"

# Flex output to flex the hardware you wish you had
elif [ "$ctype" = "flex" ]; then
	bold=$(printf '\033[1m')
	normal=$(printf '\033[m')
	if [ -z "$color" ]; then
		color=$(printf '\033[31m')
	fi
	echo "
${bold}${color}OS: ${normal}AmogOS
${bold}${color}Host: ${normal}Grandma's Computer
${bold}${color}Uptime: ${normal}69 years, 420 days
${bold}${color}CPU: ${normal}AMD Ryzen Threadripper 6990X (420) @ 6.90Ghz
${bold}${color}GPU: ${normal}NVIDIA RTX 6090 1024 GB
${bold}${color}Memory: ${normal}0.0000001MiB / 4300800MiB
"

# Help...obviously
elif [ "$ctype" = "help" ]; then
	echo "
nofetch is the best fetch script ever. Don't argue.
You downloaded it. It's yours now. Here's help if you need it ;)

Syntax: nofetch --OPTION COLOR
Options:
	Colors:
		red green blue yellow magenta cyan

	Options:
		--regular     Standard nofetch output
		--lttstore    Prints 'lttstore.com' in nofetch fashion
		--flex        Lets you flex on your friends because I know the skids want that
		--help        Prints this message (but I guess you already figured that out)
"

# Default nofetch output
else
	echo "${color}
 __      _    _______    _______   _______   _________    ________   _       _
| | \   | |  / _____ \  |  _____| |  _____| |___   ___|  / _______| | |     | |
| |\ \  | | | |     | | | |___    | |___        | |     | |         | |_____| |
| | \ \ | | | |     | | |  ___|   |  ___|       | |     | |         |  _____  |
| |  \ \| | | |     | | | |       | |           | |     | |         | |     | |
| |   \ | | | |_____| | | |       | |_____      | |     | |_______  | |     | |
|_|    \__|  \_______/  |_|       |_______|     |_|      \________| |_|     |_|
"
fi
